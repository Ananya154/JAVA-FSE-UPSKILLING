// Task 1: Display a Welcome Message
public class WelcomeMessage {
    public static void main(String[] args) {
        System.out.println("Hello, Java World!");
    }
}

// Task 2: Basic Arithmetic Calculator
import java.util.Scanner;
public class ArithmeticCalculator {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.print("First value: ");
        double num1 = input.nextDouble();
        System.out.print("Second value: ");
        double num2 = input.nextDouble();
        System.out.print("Select operator (+ - * /): ");
        char op = input.next().charAt(0);
        double result;
        switch (op) {
            case '+': result = num1 + num2; break;
            case '-': result = num1 - num2; break;
            case '*': result = num1 * num2; break;
            case '/': result = (num2 != 0) ? num1 / num2 : Double.NaN; break;
            default: System.out.println("Unknown operator"); return;
        }
        System.out.println("Computed Result: " + result);
    }
}

// Task 3: Number Type Checker
import java.util.Scanner;
public class NumberTypeChecker {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Input an integer: ");
        int value = scanner.nextInt();
        System.out.println(value % 2 == 0 ? "Even Number" : "Odd Number");
    }
}

// Task 4: Leap Year Evaluation
import java.util.Scanner;
public class LeapYearEvaluation {
    public static void main(String[] args) {
        Scanner reader = new Scanner(System.in);
        System.out.print("Provide a year: ");
        int year = reader.nextInt();
        boolean isLeap = (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0);
        System.out.println(isLeap ? "Leap Year" : "Common Year");
    }
}

// Task 5: Print Multiplication Table
import java.util.Scanner;
public class PrintTable {
    public static void main(String[] args) {
        Scanner entry = new Scanner(System.in);
        System.out.print("Enter a value: ");
        int value = entry.nextInt();
        for (int i = 1; i <= 10; i++) {
            System.out.println(value + " x " + i + " = " + (value * i));
        }
    }
}

// Task 6: Primitive Data Demo
public class PrimitiveDemo {
    public static void main(String[] args) {
        int myInt = 15;
        float myFloat = 2.75f;
        double myDouble = 6.283;
        char myChar = 'B';
        boolean myBool = false;
        System.out.println("int: " + myInt);
        System.out.println("float: " + myFloat);
        System.out.println("double: " + myDouble);
        System.out.println("char: " + myChar);
        System.out.println("boolean: " + myBool);
    }
}

// Task 7: Casting Between Types
public class CastingExample {
    public static void main(String[] args) {
        double dVal = 12.99;
        int iVal = (int) dVal;
        System.out.println("From double to int: " + iVal);
        int intSource = 5;
        double dResult = intSource;
        System.out.println("From int to double: " + dResult);
    }
}

// Task 8: Evaluate Expressions
public class ExpressionOrder {
    public static void main(String[] args) {
        int result = 8 + 3 * 2;
        System.out.println("Calculated: " + result);
    }
}

// Task 9: Assign Grade Based on Marks
import java.util.Scanner;
public class GradeEvaluator {
    public static void main(String[] args) {
        Scanner grader = new Scanner(System.in);
        System.out.print("Enter score (0-100): ");
        int score = grader.nextInt();
        char grade = score >= 90 ? 'A' : score >= 80 ? 'B' : score >= 70 ? 'C' : score >= 60 ? 'D' : 'F';
        System.out.println("Assigned Grade: " + grade);
    }
}

// Task 10: Guess the Number
import java.util.*;
public class GuessGame {
    public static void main(String[] args) {
        Scanner reader = new Scanner(System.in);
        Random random = new Random();
        int secret = random.nextInt(100) + 1, input;
        do {
            System.out.print("Guess (1-100): ");
            input = reader.nextInt();
            if (input < secret) System.out.println("Too low!");
            else if (input > secret) System.out.println("Too high!");
            else System.out.println("You've guessed it!");
        } while (input != secret);
    }
}

// Task 11: Calculate Factorial
import java.util.Scanner;
public class FactorialCalc {
    public static int getFactorial(int n) {
        return (n == 0) ? 1 : n * getFactorial(n - 1);
    }
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        System.out.print("Input number: ");
        int n = in.nextInt();
        System.out.println("Factorial is: " + getFactorial(n));
    }
}

// Task 12: Method Overload Demo
public class Additions {
    static int sum(int a, int b) {
        return a + b;
    }
    static double sum(double a, double b) {
        return a + b;
    }
    static int sum(int a, int b, int c) {
        return a + b + c;
    }
    public static void main(String[] args) {
        System.out.println(sum(4, 6));
        System.out.println(sum(4.4, 5.6));
        System.out.println(sum(1, 2, 3));
    }
}

// Task 13: Recursive Fibonacci Series
import java.util.Scanner;
public class FibonacciSeries {
    static int fib(int n) {
        if (n <= 1) return n;
        return fib(n - 1) + fib(n - 2);
    }
    public static void main(String[] args) {
        Scanner fibIn = new Scanner(System.in);
        System.out.print("Enter term n: ");
        int n = fibIn.nextInt();
        System.out.println("Fibonacci at n: " + fib(n));
    }
}

// Task 14: Array Total and Average
import java.util.Scanner;
public class TotalAndAverage {
    public static void main(String[] args) {
        Scanner arrScan = new Scanner(System.in);
        System.out.print("How many items: ");
        int count = arrScan.nextInt();
        int[] nums = new int[count];
        int total = 0;
        for (int i = 0; i < count; i++) {
            System.out.print("Item " + (i + 1) + ": ");
            nums[i] = arrScan.nextInt();
            total += nums[i];
        }
        double average = (double) total / count;
        System.out.println("Total: " + total + ", Avg: " + average);
    }
}

// Task 15: Reverse Given String
import java.util.Scanner;
public class StringFlipper {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.print("Enter text: ");
        String text = input.nextLine();
        StringBuilder reversed = new StringBuilder(text);
        System.out.println("Flipped: " + reversed.reverse());
    }
}

// Task 16: Detect Palindrome
import java.util.Scanner;
public class PalindromeDetector {
    public static void main(String[] args) {
        Scanner read = new Scanner(System.in);
        System.out.print("Enter string: ");
        String clean = read.nextLine().replaceAll("[^a-zA-Z0-9]", "").toLowerCase();
        String reversed = new StringBuilder(clean).reverse().toString();
        System.out.println(clean.equals(reversed) ? "Is a Palindrome" : "Not a Palindrome");
    }
}

// Task 17: Car Object with Attributes
class Vehicle {
    String brand, type;
    int releaseYear;
    Vehicle(String brand, String type, int releaseYear) {
        this.brand = brand;
        this.type = type;
        this.releaseYear = releaseYear;
    }
    void showInfo() {
        System.out.println("Brand: " + brand + ", Type: " + type + ", Year: " + releaseYear);
    }
    public static void main(String[] args) {
        Vehicle car = new Vehicle("Honda", "Civic", 2021);
        car.showInfo();
    }
}

// Task 18: Animal Inheritance Demo
class Creature {
    void speak() {
        System.out.println("Some generic sound");
    }
}
class Puppy extends Creature {
    void speak() {
        System.out.println("Woof woof");
    }
    public static void main(String[] args) {
        Creature base = new Creature();
        base.speak();
        Puppy pup = new Puppy();
        pup.speak();
    }
}

// Task 19: Interface Example
interface Instrument {
    void sound();
}
class Drum implements Instrument {
    public void sound() {
        System.out.println("Beating the drum");
    }
}
class Flute implements Instrument {
    public void sound() {
        System.out.println("Blowing the flute");
    }
    public static void main(String[] args) {
        Instrument d = new Drum();
        Instrument f = new Flute();
        d.sound();
        f.sound();
    }
}

// Task 20: Handle Divide By Zero
import java.util.Scanner;
public class SafeDivide {
    public static void main(String[] args) {
        Scanner reader = new Scanner(System.in);
        try {
            System.out.print("Numerator: ");
            int x = reader.nextInt();
            System.out.print("Denominator: ");
            int y = reader.nextInt();
            System.out.println("Output: " + (x / y));
        } catch (ArithmeticException e) {
            System.out.println("Error: Cannot divide by zero.");
        }
    }
}
